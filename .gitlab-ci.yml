image: maven:3.6.3-jdk-11-slim
stages:
  - build
  - test
  - release
  - deploy

variables:
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  SPRING_PROFILES_ACTIVE: ${CI_COMMIT_REF_NAME}

cache:
  paths:
    - $CI_PROJECT_DIR/.m2/repository

maven_build_job:
  stage: build
  only:
    changes:
      - greeting/**/*
  script:
    - mvn $MAVEN_CLI_OPTS clean package -DskipTests
  artifacts:
    when: on_success
    expire_in: 10 min
    paths:
      - greeting/target/*.jar

maven_test_job:
  stage: test
  only:
    changes:
      - greeting/**/*
  script:
    - mvn $MAVEN_CLI_OPTS verify -Dspring.profiles.active=${SPRING_PROFILES_ACTIVE}

maven_sonar_job:
  stage: test
  only:
    changes:
      - greeting/**/*
  script:
    - mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent package sonar:sonar -Dsonar.login=${SONAR_TOKEN} -Dspring.profiles.active=${SPRING_PROFILES_ACTIVE}

maven_release_job:
  stage: release
  before_script:
    - 'which git || (apt-get update && apt-get install -y git)'
    - git config --global user.name ${RELEASE_USER_NAME}
    - git config --global user.email ${RELEASE_USER_EMAIL}
  script:
    - git checkout -B ${CI_BUILD_REF_NAME}
    - mvn $MAVEN_CLI_OPTS -s ${MAVEN_SETTINGS_XML} release:clean release:prepare release:perform -DreleaseVersion=${RELEASE_VERSION} -DdevelopmentVersion=${NEXT_SNAPSHOT_VERSION}
  when: manual
  only:
    - master

docker_build_job:
  variables:
    DOCKER_DRIVER: overlay2
  stage: deploy
  image: docker:19.03.13-dind
  services:
    - name: docker:19.03.13-dind
  only:
    changes:
      - greeting/**/*
  before_script:
    - docker info
    - docker login -u ${GITLAB_USER_LOGIN} -p ${CI_TOKEN} ${CI_REGISTRY}
  script:
    - docker build -t ${CI_REGISTRY_IMAGE}/greeting-webservice -f greeting/Dockerfile .
    - docker push ${CI_REGISTRY_IMAGE}/greeting-webservice
  after_script:
    - docker logout ${CI_REGISTRY}